
 udp_receive: receive UDP frame with increment (i.e. index) as first uint32 of content. If full content contains index, it could be checked.
 It uses different GNU libraries (see --info option)

 usage: ./receive -h
        ./receive -s 1024 -n 123 -o result.nc

 version: v0.1.7
          CImg_NetCDF.v0.8.4
 compilation date: (May 20 2020, 16:14:38)

    -s               1024                     size of UDP buffer [byte], might be schrunk (but not expanded !)
    -B               0                        linux ethernet buffer [MByte], 0 for default
    --crc            true                     check UDP CRC
    -n               256                      number of frames
    --no-endian-swap false                    do not swap endianess, by default it is done if needed (arch. dep.)
    --do-check       false                    do data check, e.g. test pass (or -C option)
    --verbose        false                    Produce verbose output
    --simulation     false                    frame simulation, by default UDP frame are received
    --debug          false                    debug output
    -p               20485                    port where the packets are received
    -i               10.10.17.202             ip address of the receiver
    -w               3                        time out for receiving next frame [s]
    --do-warmup      false                    do data warmup, e.g. allocation and fill (or -W option)
    -b               16                       shift in data buffer [char]
    --nc             true                     do store data in NetCDF
    -o               udp_receive.nc           output file name (e.g. -o data.nc)
    -od              udp_receive_drop.nc      output file name (e.g. -od datad.nc)
    -or              udp_receive_rate.nc      output file name (e.g. -or datar.nc)
    -oi              udp_receive_received.nc  output file name (e.g. -or datai.nc)
    --help           true                     help (or -h option)
    --info           true                     show compilation options (or -I option)

 CImg Library 2.6.7, compiled May 20 2020 ( 16:14:38 ) with the following flags:

  > Operating System:       Unix          ('cimg_OS'=1)
  > CPU endianness:         Little Endian
  > Verbosity mode:         Console       ('cimg_verbosity'=1)
  > Stricts warnings:       No            ('cimg_strict_warnings' undefined)
  > Support for C++11:      No            ('cimg_use_cpp11'=0)
  > Using VT100 messages:   Yes           ('cimg_use_vt100' defined)
  > Display type:           No display    ('cimg_display'=0)
  > Using OpenMP:           Yes           ('cimg_use_openmp' defined)
  > Using PNG library:      No            ('cimg_use_png' undefined)
  > Using JPEG library:     No            ('cimg_use_jpeg' undefined)
  > Using TIFF library:     No            ('cimg_use_tiff' undefined)
  > Using Magick++ library: No            ('cimg_use_magick' undefined)
  > Using FFTW3 library:    No            ('cimg_use_fftw3' undefined)
  > Using LAPACK library:   No            ('cimg_use_lapack' undefined)
  > Path of ImageMagick:    "convert"    
  > Path of GraphicsMagick: "gm"         
  > Path of 'medcon':       "medcon"     
  > Temporary path:         "/tmp"       

    --version        false                    show version (or -v option)
